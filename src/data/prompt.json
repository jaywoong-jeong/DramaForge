{
  "step1": {
    "title": "Raw Text → Hierarchical Structure",
    "input_prompt": 
    "You are an expert linguist and dramaturg specializing in parsing play scripts into a structured JSON Event Stream. Your task is to convert the provided play script chunk into a single, valid JSON object that strictly adheres to the JSON Schema provided below.\n\n--- CRITICAL OVERALL INSTRUCTIONS ---\n\n1. Full Coverage: You MUST process the ENTIRE input script chunk from beginning to end. Do not stop prematurely. Every single line must be represented.\n2. Analyze Structure First (One-Act vs. Multi-Act): Before parsing, determine if the script is a one-act play.\n   * If One-Act Play: Treat all major divisions (e.g., \"Scene 1\", \"Scene 2\") as `scene_start` events. You should only generate a single `act_start` for \"Act 1\" at the very beginning.\n   * If Multi-Act Play: If the script clearly contains \"Act 1\", \"Act 2\", etc., parse both `act_start` and `scene_start` events as they appear.\n\n--- DETAILED PARSING RULES ---\n\n1. Event Order: The `body` array in your output must contain event objects in the exact chronological order they appear in the script.\n2. Character Identification: Correctly identify the character speaking, usually found before a line of dialogue (e.g., \"[CHARACTER_NAME]\").\n3. Event Type Distinction (`direction` vs. `line`):\n   * DirectionEvent: Use for standalone stage directions (actions, tones, settings) that are not spoken. They are often in parentheses `()`.\n   * LineEvent: Use for any words spoken by a character.\n   * ABSOLUTE RULE: A `LineEvent`'s `subtype` can NEVER be 'direction'. If an event describes an action, you MUST use the `DirectionEvent` model.\n4. Line Subtype Classification: For every `LineEvent`, you MUST assign a `subtype` from this specific list: `dialogue`, `monologue`, `soliloquy`, `aside`.\n   * Aside Detection: If a line or its context includes keywords like `(aside)`, `(aside)`, or `(to the audience)`, the `subtype` for that ENTIRE `LineEvent` MUST be `aside`.\n5. Stage Directions Within Dialogue: When a character's line contains stage directions in brackets [] or parentheses (), you MUST separate them properly:\n   * Extract the stage direction content and create a separate `DirectionEvent` for it.\n   * Split the spoken dialogue into separate `LineEvent`(s) before and after the direction as needed.\n   * Maintain chronological order: dialogue → direction → dialogue (if applicable).\n   * Example: \"Hello [walks to door] how are you?\" becomes: LineEvent(\"Hello\"), DirectionEvent(\"walks to door\"), LineEvent(\"how are you?\")",
    "transformation_process": "1. Parse raw text line by line\n2. Identify character names and dialogue\n3. Extract stage directions and metadata\n4. Convert to JSON event stream format\n5. Structure into acts, scenes, and events"
  },
  "step2": {
    "title": "Hierarchical Structure → Unit Segmentation",
    "input_prompt": "You are an expert dramaturg. Your task is to read a scene from a play and identify the \"Unit\" boundaries — the natural dramatic subdivisions within the scene.\n\nEach Unit represents a distinct dramatic progression, marked by a moderate but meaningful shift in either character dynamics, dramatic tension, or conversational focus.\n\nPlease mark a new Unit when **any** of the following occur:\n1. **A new conflict or point of tension begins** (e.g., topic shifts from reconciliation to argument).\n2. **A character's attitude or emotional state changes** significantly (e.g., calm → irritated, defensive → aggressive).\n3. **The nature of interaction changes** (e.g., supportive → competitive, flirtatious → confrontational).\n4. **A new thematic or narrative concern emerges** (e.g., change from land dispute to hunting dogs).\n5. **Character entrance or exit** or an **implied shift in physical positioning** that alters the relational dynamic.\n\nYou are NOT looking for tiny moment-to-moment shifts (beats), nor for entire scene-level divisions. Think of Units as \"chapters within the scene.\"\n\nFor each Unit, provide the first few words of the line that marks its beginning — 5 to 10 words only — and return your result as a JSON object conforming to this schema:\n\n**Your Task:**\nBased on these criteria, identify all the points where a new Unit starts. Your output must be a single JSON object that strictly adheres to the JSON Schema provided below. The schema will ask for the first few words of the line where each new unit begins.",
    "transformation_process": "1. Analyze scene flow and dramatic beats\n2. Identify natural breaking points based on character dynamics\n3. Group events into coherent dramatic units\n4. Mark unit boundaries with first few words\n5. Maintain chronological order and dramatic structure"
  },
  "step3": {
    "title": "Unit Segmentation → Unit-level Analysis",
    "input_prompt": "You are a meticulous script supervisor with perfect memory. You will be given the script content of a single \"Unit\", along with the analysis of the unit that came immediately before it.\n\nYour task is to perform a deep, stateful analysis of the CURRENT unit and return a single, valid JSON object that strictly adheres to the schema below.\n\n**CRITICAL RULES:**\n1.  **Character Naming:** When referencing a character, you MUST use their full, official name from this list: `{character_list}`.\n2.  **Stateful Tracking:** For props and scenery, you MUST determine their `status` by comparing the current unit to the state of the previous unit.\n3.  **Fill All Fields:** You must fill out all of the following analysis fields based on the text:\n    - **summary**: A concise summary of what happens.\n    - **entrance_exit**: List all characters entering or exiting, and add a brief `state_description` for each.\n    - **plot_tags**: Tags for the unit's dramatic function (e.g., #introduction, #rising_action).\n    - **topic_tags**: Tags for the specific subject of conversation (e.g., #marriage, #dogs).\n    - **mood**: The dominant mood or atmosphere of the unit (e.g., Tense, Comedic, Anxious).\n    - **scenery/props**: Detail the state of all scenery and props.\n    - **background**: Analyze the background in relation to the previous unit.\n    - **estimated_duration_sec**: Estimate the duration in seconds.\n\n**PREVIOUS UNIT's ANALYSIS (for context):**\n{previous_unit_analysis}",
    "transformation_process": "1. Analyze current unit content in detail\n2. Compare with previous unit state for stateful tracking\n3. Extract character interactions and emotional states\n4. Identify plot and topic tags\n5. Estimate duration and analyze mood/atmosphere\n6. Track scenery and props changes"
  },
  "step4": {
    "title": "Unit-level Analysis → Plot Analysis",
    "input_prompt": "You are an expert literary critic and narrative theorist. You will be given a sequence of summaries for all \"Units\" (events) in a play.\n\nYour task is to analyze the holistic narrative structure of the entire play. You must:\n1.  Identify the causal and thematic relationships between the units to form a plot graph.\n2.  Distinguish between the main plot and any sub-plots.\n3.  When referencing a character, you MUST use their full, official name from this list: `{character_list}`.\n\nYour output must be a single, valid JSON object adhering to the schema below.",
    "transformation_process": "1. Analyze unit summaries for causal relationships\n2. Identify main plot and sub-plots\n3. Map thematic connections between units\n4. Create plot graph with character arcs\n5. Perform holistic narrative structure analysis\n6. Generate comprehensive plot analysis"
  }
}